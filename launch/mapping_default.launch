<?xml version="1.0"?>

<launch>

  <arg name="model" default="$(find div_datalogger_postprocess)/urdf/DataLogger_v2.urdf" />
  <arg name="gui" default="true" />
  <arg name="rvizconfig" default="$(find div_datalogger_postprocess)/rviz/mapping.rviz" />

  <!-- simulation parameter -->
  <arg name="bag_dir" default="/home/chalmers/Desktop/2018-PedestrianOvertaking/SecondCollection" />
  <arg name="file" default="2018-03-21-14-13-32_1.bag" />
  <param name="use_sim_time" value="true"/>
   <node pkg="rosbag" type="play" name="player" args="--clock $(arg bag_dir)/$(arg file)">
  </node>
  <!-- TF broadcasters -->
  <node name="imu_to_tf" pkg="div_datalogger_postprocess" type="imu_to_tf.py" respawn="false" output="screen"/> <!-- FROM base_link to base_stabilized -->

  <node pkg="tf" type="static_transform_publisher" name="map_2_odom" args="0 0 0 0 0 0 map odom 100"/>
   <node pkg="tf" type="static_transform_publisher" name="base_footprint_2_base_stabilized" args="0 0 1.2 1.57 0 0 base_footprint base_stabilized 100"/>  
 
   <node pkg="tf" type="static_transform_publisher" name="base_link_2_imu_link" args="-0.0645 0 0.087 0 0 0 base_link imu_link 100"/>
  <!--<node pkg="tf" type="static_transform_publisher" name="base_link_2_laser" args="-0.0645 0 -0.0134 0 0 3.14 base_link laser 100"/>-->


  <!-- URDF 3D model -->
  <param name="robot_description" command="$(find xacro)/xacro.py $(arg model)" />
  <param name="use_gui" value="$(arg gui)"/>

  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />
<!-- here hector-mapping -->
  <arg name="tf_map_scanmatch_transform_frame_name" default="base_footprint"/>
  <arg name="base_frame" default="base_footprint"/>
  <arg name="odom_frame" default="odom"/>
  <arg name="pub_map_scanmatch_transform" default="true"/>
  <arg name="pub_map_odom_transform" default="false"/>
  <arg name="scan_subscriber_queue_size" default="5"/>
  <arg name="scan_topic" default="scan"/>
  <arg name="map_size" default="2048"/>


  <node pkg="hector_mapping" type="hector_mapping" name="hector_mapping" respawn="true" output="screen">
    <param name="pub_debug_output" value="true"/>
    <!-- Frame names -->
    <param name="map_frame" value="map" />
    <param name="base_frame" value="$(arg base_frame)" />
    <param name="odom_frame" value="$(arg odom_frame)" />

    <!-- Tf use -->
    <param name="use_tf_scan_transformation" value="false"/>
    <param name="use_tf_pose_start_estimate" value="false"/>
    <param name="pub_map_scanmatch_transform" value="$(arg pub_map_scanmatch_transform)"/>
    <param name="pub_map_odom_transform" value="$(arg pub_map_odom_transform)"/>

    <!-- Map size / start point -->
    <param name="map_resolution" value="0.10"/>
    <param name="map_size" value="$(arg map_size)"/>
    <param name="map_start_x" value="0.5"/>
    <param name="map_start_y" value="0.5" />
    <param name="map_multi_res_levels" value="2" />

    <!-- Map update parameters
    <param name="update_factor_free" value="0.4"/>
    <param name="update_factor_occupied" value="0.9" />
    <param name="map_update_distance_thresh" value="10"/>
    <param name="map_update_angle_thresh" value="1" />-->
    <param name="laser_z_min_value" value = "0" />
    <param name="laser_z_max_value" value = "2" />
    <param name="laser_max_dist" value="120"/>

    <!-- Advertising config -->
    <param name="advertise_map_service" value="false"/>

    <param name="scan_subscriber_queue_size" value="$(arg scan_subscriber_queue_size)"/>
    <param name="scan_topic" value="$(arg scan_topic)"/>

    <!-- Debug parameters -->
    <!--
    <param name="output_timing" value="false"/>
    <param name="pub_drawings" value="true"/>
    <param name="pub_debug_output" value="true"/>
  -->
  <param name="tf_map_scanmatch_transform_frame_name" value="$(arg tf_map_scanmatch_transform_frame_name)" />
</node>


<!-- create a "virtual" accelerometer (imu without gyro info) at the frame_stabilized-->

<!-- EDIT PG
<node pkg="imu_transformer" type="imu_transformer_node" name="imu_data_transformer" output="screen">
  <remap from="imu_in" to="imu"/>
  <remap from="imu_out" to="imu_stabilized"/>
  <param name="target_frame" value="base_stabilized"/>
  <param name="source_frame" value="imu_link"/>
</node>
-->


<!-- robot localization
<node pkg="robot_localization" type="ekf_localization_node" name="ekf_se">
  <rosparam command="load" file="$(find robot_localization)/params/ekf_template.yaml" />


</node>

<node type="periodic_snapshotter" pkg="laser_assembler" name="periodic_snapshotter" output="screen"/>

<node type="laser_scan_assembler" pkg="laser_assembler" name="my_assembler" output="screen">
  <param name="max_scans" type="int" value="1000" />
  <param name="fixed_frame" type="string" value="base_footprint" />
</node>
-->
<node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)" required="true" />
<!--<node pkg="tf" type="static_transform_publisher" name="map_nav_broadcaster" args="0 0 0 0 0 0 map nav 100"/>-->
</launch>
